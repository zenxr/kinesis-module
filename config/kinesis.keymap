#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

&mt {
    tapping-term-ms = <170>;
    quick-tap-ms = <100>;
    flavor = "tap-preferred";
};

&lt {
    tapping-term-ms = <240>;
    quick-tap-ms = <150>;
    flavor = "balanced";
};

/ {
    combos {
        compatible = "zmk,combos";

        Capsword {
            bindings = <&caps_word>;
            key-positions = <28 31>;
        };
    };

    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
            hold-trigger-key-positions = <56 57 60 64 63 62 58 59 61 65 66 67 6 18 30 42 43 52 53 44 32 31 19 20 8 7 9 21 33 45 54 55 34 46 47 35 23 22 10 11>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
            hold-trigger-key-positions = <56 57 60 64 63 62 58 59 61 65 66 67 41 29 17 5 0 12 24 36 37 48 49 50 51 40 39 38 26 25 27 28 16 15 14 13 1 2 3 4>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ----------------------------------------------------------------------------------------------------
            // |  +/=   |   1   |   2   |   3   |   4   |   5   |   6   |   7   |   8   |   9   |   0    | -/_    |
            // |  TAB   |   Q   |   W   |   E   |   R   |   T   |   Y   |   U   |   I   |   O   |   P    | :/\    |
            // |  CAPS  |   A   |   S   |   D   |   F   |   G   |   H   |   J   |   K   |   L   |   ;    | '/"    |
            // | LSHIFT |   Z   |   X   |   C   |   V   |   B   |   N   |   M   |   ,   |   .   |   /    | RSHIFT |
            // |        |   ~   |  :/\  |  LA   |  RA   |       |       |   UA  |  DA   |   [   |   ]    |        |
            // |  BS    |  DEL  |  End  | HOME  |  ALT  |  CTRL |  CTRL |  Win  | PgUp  |  PgDn | Enter  | Space  |

            bindings = <
&kp EQUAL   &kp N1         &kp N2     &kp N3         &kp N4             &kp N5  &kp N6  &kp N7              &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB     &kp SQT        &kp COMMA  &kp PERIOD     &kp P              &kp Y   &kp F   &kp G               &kp C      &kp R     &kp L     &kp SLASH
&kp ESCAPE  &kp A          &kp O      &kp E          &hml LEFT_SHIFT U  &kp I   &kp D   &hmr RIGHT_SHIFT H  &kp T      &kp N     &kp S     &kp BACKSLASH
&kp LSHFT   &kp SEMICOLON  &kp Q      &kp J          &kp K              &kp X   &kp B   &kp M               &kp W      &kp V     &kp Z     &kp RSHFT
            &kp GRAVE      &kp CAPS   &kp LEFT       &kp RIGHT                          &kp UP              &kp DOWN   &kp LBKT  &kp RBKT
                                      &mt LCTRL TAB  &kp LALT                           &kp LCMD            &kp RCTRL
                                                     &kp HOME                           &kp PG_UP
                           &kp SPACE  &kp DEL        &lt 1 END                          &kp PG_DN           &kp ENTER  &kp BSPC
            >;
        };

        layer_1 {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans   &trans   &trans
        &trans  &trans  &trans  &trans                  &trans  &trans  &trans   &trans
                        &trans  &trans                  &trans  &trans
                                &trans                  &trans
                &trans  &trans  &trans                  &trans  &trans  &trans
            >;
        };
    };
};
